//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpeechEngine.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SpeechEngine.Localization.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clear.
        /// </summary>
        internal static string SpeechCommandClear {
            get {
                return ResourceManager.GetString("SpeechCommandClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to clears all text.
        /// </summary>
        internal static string SpeechCommandClearDecription {
            get {
                return ResourceManager.GetString("SpeechCommandClearDecription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to close bracket.
        /// </summary>
        internal static string SpeechCommandCloseBracket {
            get {
                return ResourceManager.GetString("SpeechCommandCloseBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to сolon.
        /// </summary>
        internal static string SpeechCommandColon {
            get {
                return ResourceManager.GetString("SpeechCommandColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to сomma.
        /// </summary>
        internal static string SpeechCommandComma {
            get {
                return ResourceManager.GetString("SpeechCommandComma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dash.
        /// </summary>
        internal static string SpeechCommandDash {
            get {
                return ResourceManager.GetString("SpeechCommandDash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delete.
        /// </summary>
        internal static string SpeechCommandDeleteWord {
            get {
                return ResourceManager.GetString("SpeechCommandDeleteWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to removes the last word.
        /// </summary>
        internal static string SpeechCommandDeleteWordDecription {
            get {
                return ResourceManager.GetString("SpeechCommandDeleteWordDecription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exclamation mark.
        /// </summary>
        internal static string SpeechCommandExclamationMark {
            get {
                return ResourceManager.GetString("SpeechCommandExclamationMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hyphen.
        /// </summary>
        internal static string SpeechCommandHyphen {
            get {
                return ResourceManager.GetString("SpeechCommandHyphen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding commands imposes certain restrictions. Text that is a command will be perceived only as a command, fortunately there are a lot of synonyms). For speech and special commands, the ability to repeat the command has been added, for example: “question mark ten” will add ten question marks. (limited to 99)..
        /// </summary>
        internal static string SpeechCommandIntroduction {
            get {
                return ResourceManager.GetString("SpeechCommandIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new line.
        /// </summary>
        internal static string SpeechCommandNewLine {
            get {
                return ResourceManager.GetString("SpeechCommandNewLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open bracket.
        /// </summary>
        internal static string SpeechCommandOpenBracket {
            get {
                return ResourceManager.GetString("SpeechCommandOpenBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to point.
        /// </summary>
        internal static string SpeechCommandPoint {
            get {
                return ResourceManager.GetString("SpeechCommandPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to question mark.
        /// </summary>
        internal static string SpeechCommandQuestionMark {
            get {
                return ResourceManager.GetString("SpeechCommandQuestionMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to quote.
        /// </summary>
        internal static string SpeechCommandQuote {
            get {
                return ResourceManager.GetString("SpeechCommandQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to semicolon.
        /// </summary>
        internal static string SpeechCommandSemicolon {
            get {
                return ResourceManager.GetString("SpeechCommandSemicolon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speech commands:.
        /// </summary>
        internal static string SpeechCommandTitle {
            get {
                return ResourceManager.GetString("SpeechCommandTitle", resourceCulture);
            }
        }
    }
}
