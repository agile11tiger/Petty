<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonApply" xml:space="preserve">
    <value>Применить</value>
  </data>
  <data name="ButtonBuyCoffee" xml:space="preserve">
    <value>Купите мне кофе, я устал :(</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ButtonClear" xml:space="preserve">
    <value>Очистить</value>
  </data>
  <data name="ButtonDefault" xml:space="preserve">
    <value>По умолчанию</value>
  </data>
  <data name="ButtonDonate" xml:space="preserve">
    <value>Все сообщения читаю лично :)</value>
  </data>
  <data name="ButtonDownload" xml:space="preserve">
    <value>Скачать</value>
  </data>
  <data name="ButtonLater" xml:space="preserve">
    <value>Позже</value>
  </data>
  <data name="ButtonNo" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="ButtonOk" xml:space="preserve">
    <value>Ок</value>
  </data>
  <data name="ButtonSpeak" xml:space="preserve">
    <value>Сказать</value>
  </data>
  <data name="ButtonStartStop" xml:space="preserve">
    <value>Старт/Стоп</value>
  </data>
  <data name="ButtonYes" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="CommandCall" xml:space="preserve">
    <value>позвони</value>
  </data>
  <data name="CommandCallDescription" xml:space="preserve">
    <value>делает вызов, если данный пользователь был найден в вашем списке контактов. Для вашего удобства добавлено склонение имен и фамилий, при условии, сначало имя, потом фамилия, дальше все остальное.
Все символы кроме букв удаляются, поэтому у контакта "Тигр Тигровов9 (друг)" останется "Тигр Тигровов друг" и будут доступны следующие команды:
1. Петти позвони Тигр Тигров друг
2. Петти позвони Тигру Тигрову друг</value>
  </data>
  <data name="CommandFlashlight" xml:space="preserve">
    <value>фонарик</value>
  </data>
  <data name="CommandFlashlightDescription" xml:space="preserve">
    <value>включает/выключает фонарик (если фонарик был уже включен вне приложения, то первый вызов включит включенный фонарик, а второй отключит)</value>
  </data>
  <data name="CommandHelp" xml:space="preserve">
    <value>помогите</value>
  </data>
  <data name="CommandHelpDescription" xml:space="preserve">
    <value>рассылает, если были заранее выбраны люди и включает сирену (по желанию) о помощи.</value>
  </data>
  <data name="CommandPetName" xml:space="preserve">
    <value>пэтти</value>
  </data>
  <data name="CommandPickFiles" xml:space="preserve">
    <value>выбрать файлы</value>
  </data>
  <data name="CommandPickFilesDescription" xml:space="preserve">
    <value>отрывает список для выбора файлов</value>
  </data>
  <data name="CommandPickImages" xml:space="preserve">
    <value>выбрать фото</value>
  </data>
  <data name="CommandPickImagesDescription" xml:space="preserve">
    <value>открывает список для выбора изображений</value>
  </data>
  <data name="CommandPickVideoFiles" xml:space="preserve">
    <value>выбрать видео</value>
  </data>
  <data name="CommandPickVideoFilesDescription" xml:space="preserve">
    <value>открывает список для выбора видео файлов</value>
  </data>
  <data name="CommandScreenshot" xml:space="preserve">
    <value>скриншот</value>
  </data>
  <data name="CommandScreenshotDescription" xml:space="preserve">
    <value>делает снимок экрана.</value>
  </data>
  <data name="CommandTakePhoto" xml:space="preserve">
    <value>сделать фото</value>
  </data>
  <data name="CommandTakePhotoDescription" xml:space="preserve">
    <value>открывает окно для фотографирования</value>
  </data>
  <data name="CommandTakeVideo" xml:space="preserve">
    <value>сделать видео</value>
  </data>
  <data name="CommandTakeVideoDescription" xml:space="preserve">
    <value>открывает окно для создания видео файла</value>
  </data>
  <data name="EditorVoiceTestSpeech" xml:space="preserve">
    <value>Привет, кожаный мешок, как дела?</value>
  </data>
  <data name="InformationPerceptionMode" xml:space="preserve">
    <value>Способ восприятия информации:</value>
  </data>
  <data name="InformationPerceptionModeRead" xml:space="preserve">
    <value>Чтение — вся информация отображается на экране.</value>
  </data>
  <data name="InformationPerceptionModeReadOrVoice" xml:space="preserve">
    <value>ЧтениеИлиГолос  — вся информация отображается или произносится.</value>
  </data>
  <data name="InformationPerceptionModeVoice" xml:space="preserve">
    <value>Голос — вся информация произносится.</value>
  </data>
  <data name="LabelSettingsCurrentLanguage" xml:space="preserve">
    <value>Текущий язык:</value>
  </data>
  <data name="LabelSettingsPitch" xml:space="preserve">
    <value>Подача</value>
  </data>
  <data name="LabelSettingsValue" xml:space="preserve">
    <value>Значение: {0}</value>
  </data>
  <data name="LabelSettingsVolume" xml:space="preserve">
    <value>Громкость</value>
  </data>
  <data name="LanguageEnglish" xml:space="preserve">
    <value>Английский</value>
  </data>
  <data name="LanguageRussian" xml:space="preserve">
    <value>Русский</value>
  </data>
  <data name="PageAbout" xml:space="preserve">
    <value>Информация</value>
  </data>
  <data name="PageBaseSettings" xml:space="preserve">
    <value>Базовые настройки</value>
  </data>
  <data name="PageDiagnostics" xml:space="preserve">
    <value>Диагностика</value>
  </data>
  <data name="PageHelp" xml:space="preserve">
    <value>Помощь</value>
  </data>
  <data name="PageLeaderboard" xml:space="preserve">
    <value>Таблица лидеров</value>
  </data>
  <data name="PagePetty" xml:space="preserve">
    <value>Пэтти</value>
  </data>
  <data name="PageSettings" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="PageSpeechSimulator" xml:space="preserve">
    <value>Тренажёр речи</value>
  </data>
  <data name="PageVoiceSettings" xml:space="preserve">
    <value>Голос</value>
  </data>
  <data name="SpeechCommandBracket" xml:space="preserve">
    <value>скобка</value>
  </data>
  <data name="SpeechCommandColon" xml:space="preserve">
    <value>двоеточие</value>
  </data>
  <data name="SpeechCommandComma" xml:space="preserve">
    <value>запятая</value>
  </data>
  <data name="SpeechCommandExclamationMark" xml:space="preserve">
    <value>восклицательный знак</value>
  </data>
  <data name="SpeechCommandNewLine" xml:space="preserve">
    <value>новая строка</value>
  </data>
  <data name="SpeechCommandPoint" xml:space="preserve">
    <value>точка</value>
  </data>
  <data name="SpeechCommandQuestionMark" xml:space="preserve">
    <value>вопросительный знак</value>
  </data>
  <data name="SpeechCommandQuote" xml:space="preserve">
    <value>кавычки</value>
  </data>
  <data name="TitleCommands" xml:space="preserve">
    <value>Команды</value>
  </data>
  <data name="TitleDownloading" xml:space="preserve">
    <value>Скачивание</value>
  </data>
  <data name="TitlePunctuationWords" xml:space="preserve">
    <value>Слова для знаков пунктуации:</value>
  </data>
  <data name="UsefulFeatures" xml:space="preserve">
    <value>Полезные фичи:</value>
  </data>
  <data name="UserMessageCheckNetworkConnection" xml:space="preserve">
    <value>Проверьте соединение к сети и попробуйте снова.</value>
  </data>
  <data name="UserMessageCommandNotSupported" xml:space="preserve">
    <value>Эта команда не поддерживается на этом устройстве.</value>
  </data>
  <data name="UserMessageContactNotFound" xml:space="preserve">
    <value>{0} не найдет.</value>
  </data>
  <data name="UserMessageDisablePettyGuard" xml:space="preserve">
    <value>Вы точно хотите отключить защиту Пэтти?</value>
  </data>
  <data name="UserMessageDownloadingInProgress" xml:space="preserve">
    <value>Идёт скачивание, подождите его завершения...</value>
  </data>
  <data name="UserMessageDownloadVoskModelMessage" xml:space="preserve">
    <value>Для начала распознавания голоса вам необходимо скачать модель голоса (около 45 МБ)</value>
  </data>
  <data name="UserMessagePettySpeechSimulatorPlaceholder" xml:space="preserve">
    <value>Люди не понимают, что вы говорите, но вам кажется ваша речь нормальной? 
Решение есть!!! 
Петти тренажер для речи поможет вам в этом непростом деле. 
Просто начни говорить, а он покажет, что слышат люди. 
Здесь будет ваша речь, удачи!)</value>
  </data>
  <data name="UserMessagePettyStartStopRemark" xml:space="preserve">
    <value>П.С. Это кнопка запускает и останавливает голосового помощника Петти во всем приложении.</value>
  </data>
  <data name="UserMessageTryLater" xml:space="preserve">
    <value>Эта операция уже выполняется. Пожалуйста, повторите попытку позже.</value>
  </data>
</root>